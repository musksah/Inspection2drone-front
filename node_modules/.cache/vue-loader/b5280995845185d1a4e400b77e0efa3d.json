{"remainingRequest":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/src/pages/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/src/pages/Users.vue","mtime":1590205858434},{"path":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sebastian/Documentos/inspection2drone/DjInspection2drone/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport { AgGridVue } from \"ag-grid-vue\";\nexport default {\n  data() {\n    return {\n      columnDefs: [],\n      rowData: [],\n      form: {\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        password: \"\",\n        company_id: null,\n        profile_id: null\n      },\n      frameworkComponents: null,\n      context: null,\n      show: true,\n      options_company: [{ value: null, text: \"seleccionar...\" }],\n      options_profile: [\n        { value: null, text: \"seleccionar...\" },\n        { value: 1, text: \"Administrador\" },\n        { value: 2, text: \"Operador\" },\n        { value: 3, text: \"Cliente\" }\n      ]\n    };\n  },\n  components: {\n    AgGridVue\n  },\n  beforeMount() {\n    this.base_instance_axios = this.$store.getters.getBaseInstanceAxios;\n    this.context = { componentParent: this };\n  },\n  mounted() {\n    this.getList();\n    this.getCompanies();\n  },\n  methods: {\n    register(evt) {\n      const axiosInstance = axios.create(this.base_instance_axios);\n      axiosInstance({\n        url: \"/users/list/\",\n        method: \"POST\",\n        params: this.form\n      })\n        .then(res => {\n          console.log(res);\n          swal({\n            type: \"success\",\n            icon: \"success\",\n            title: \"Proceso Completado\",\n            text: \"El usuario ha sido creado correctamente\",\n            timer: 3000\n          });\n          this.getList();\n          this.$bvModal.hide('modal-form-users');\n        })\n        .catch(e => {\n          this.loading = false;\n          swal({\n            type: \"error\",\n            icon: \"error\",\n            title: \"Error\",\n            text: \"El usuario no pudo ser creado\",\n            timer: 3000\n          });\n        });\n    },\n    onReset(evt) {\n      evt.preventDefault();\n      // Reset our form values\n      this.form.first_name = \"\";\n      this.form.last_name = \"\";\n      this.form.email = \"\";\n      this.form.password = \"\";\n      this.form.company_id = null;\n      this.form.profile_id = null;\n      // Trick to reset/clear native browser form validation state\n      this.show = false;\n      this.$nextTick(() => {\n        this.show = true;\n      });\n    },\n    getList() {\n      this.columnDefs = [];\n      this.rowData = [];\n      const axiosInstance = axios.create(this.base_instance_axios);\n      axiosInstance({\n        url: \"/users/list/\",\n        method: \"get\",\n        params: {}\n      })\n        .then(res => {\n          let fields_excluded = [\n            \"password\",\n            \"is_superuser\",\n            \"last_login\",\n            \"is_staff\",\n            \"is_active\",\n            \"user_permissions\"\n          ];\n          res.data.forEach(item => {\n            Object.keys(item).forEach(key => {\n              if (!fields_excluded.includes(key)) {\n                this.columnDefs.push({ headerName: key, field: key });\n              }\n            });\n            this.rowData.push({\n              id: item.id,\n              username: item.username,\n              is_superuser: item.is_superuser,\n              first_name: item.first_name,\n              last_name: item.last_name,\n              email: item.email,\n              company: item.company\n            });\n          });\n        })\n        .catch(e => {\n          this.loading = false;\n          swal({\n            type: \"error\",\n            icon: \"error\",\n            title: \"Error\",\n            text: \"El usaurio no puedo ser creado\",\n            timer: 3000\n          });\n        });\n    },\n    getCompanies() {\n      const axiosInstance = axios.create(this.base_instance_axios);\n      axiosInstance({\n        url: \"/companies/\",\n        method: \"get\",\n        params: {}\n      })\n        .then(res => {\n          let fields_excluded = [\n            \"password\",\n            \"is_superuser\",\n            \"last_login\",\n            \"is_staff\",\n            \"is_active\",\n            \"user_permissions\"\n          ];\n          console.log(res);\n          res.data.forEach(item => {\n            this.options_company.push({ value: item.id, text: item.name });\n          });\n        })\n        .catch(e => {\n          this.loading = false;\n          swal({\n            type: \"error\",\n            icon: \"error\",\n            title: \"Error\",\n            text: \"No se pudieron traer las compañías\",\n            timer: 3000\n          });\n        });\n    }\n  }\n};\n",{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Users.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <ag-grid-vue\n          style=\"width: auto; height: 300px;\"\n          class=\"ag-theme-balham\"\n          :columnDefs=\"columnDefs\"\n          :rowData=\"rowData\"\n          :context=\"context\"\n          pagination=\"true\"\n        ></ag-grid-vue>\n      </div>\n    </div>\n    <b-button v-b-modal.modal-form-users>Registrar Usuario</b-button>\n    <b-modal id=\"modal-form-users\" size=\"lg\" ok-disabled=\"true\" title=\"Registrar Usuario\">\n      <b-form @submit.prevent=\"register\" @reset=\"onReset\" v-if=\"show\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <b-form-group id=\"first_name-group\" label=\"Nombre:\" label-for=\"first_name\" style=\"margin-bottom:0;\">\n              <b-form-input\n                id=\"first_name\"\n                v-model=\"form.first_name\"\n                type=\"text\"\n                required\n                placeholder=\"Ingresar nombre\"\n              ></b-form-input>\n            </b-form-group>\n          </div>\n          <div class=\"col-md-6\">\n            <b-form-group id=\"last_name-group\" label=\"Apellido:\" label-for=\"last_name\" style=\"margin-bottom:0;\">\n              <b-form-input\n                id=\"last_name\"\n                v-model=\"form.last_name\"\n                type=\"text\"\n                required\n                placeholder=\"Ingresar apellido\"\n              ></b-form-input>\n            </b-form-group>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <b-form-group id=\"email-group\" label=\"Email address:\" label-for=\"email\" style=\"margin-bottom:0;\">\n              <b-form-input\n                id=\"input-1\"\n                v-model=\"form.email\"\n                type=\"email\"\n                required\n                placeholder=\"Enter email\"\n              ></b-form-input>\n            </b-form-group>\n          </div>\n          <div class=\"col-md-6\">\n            <b-form-group id=\"username-group\" label=\"Usuario:\" label-for=\"username\" style=\"margin-bottom:0;\">\n              <b-form-input\n                id=\"username\"\n                v-model=\"form.username\"\n                type=\"text\"\n                required\n                placeholder=\"Ingresar usuario\"\n              ></b-form-input>\n            </b-form-group>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <b-form-group id=\"password-group\" label=\"Contraseña:\" label-for=\"password\" style=\"margin-bottom:0;\">\n              <b-form-input\n                id=\"input-1\"\n                v-model=\"form.password\"\n                type=\"password\"\n                required\n                placeholder=\"Ingresar contraseña\"\n              ></b-form-input>\n            </b-form-group>\n          </div>\n          <div class=\"col-md-6\">\n            <b-form-group id=\"company_id-group\" label=\"Compañía:\" label-for=\"company_id\" style=\"margin-bottom:0;\">\n              <b-form-select v-model=\"form.company_id\" :options=\"options_company\"></b-form-select>\n            </b-form-group>\n          </div>\n        </div>\n        <div class=\"row mb-2\">\n          <div class=\"col-md-6\">\n            <b-form-group id=\"profile_id-group\" label=\"Perfil:\" label-for=\"profile_id\">\n              <b-form-select v-model=\"form.profile_id\" :options=\"options_profile\"></b-form-select>\n            </b-form-group>\n          </div>\n        </div>\n        <b-button class=\"mr-2\" type=\"submit\" variant=\"primary\">Registrar</b-button>\n        <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n      </b-form>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport { AgGridVue } from \"ag-grid-vue\";\nexport default {\n  data() {\n    return {\n      columnDefs: [],\n      rowData: [],\n      form: {\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        password: \"\",\n        company_id: null,\n        profile_id: null\n      },\n      frameworkComponents: null,\n      context: null,\n      show: true,\n      options_company: [{ value: null, text: \"seleccionar...\" }],\n      options_profile: [\n        { value: null, text: \"seleccionar...\" },\n        { value: 1, text: \"Administrador\" },\n        { value: 2, text: \"Operador\" },\n        { value: 3, text: \"Cliente\" }\n      ]\n    };\n  },\n  components: {\n    AgGridVue\n  },\n  beforeMount() {\n    this.base_instance_axios = this.$store.getters.getBaseInstanceAxios;\n    this.context = { componentParent: this };\n  },\n  mounted() {\n    this.getList();\n    this.getCompanies();\n  },\n  methods: {\n    register(evt) {\n      const axiosInstance = axios.create(this.base_instance_axios);\n      axiosInstance({\n        url: \"/users/list/\",\n        method: \"POST\",\n        params: this.form\n      })\n        .then(res => {\n          console.log(res);\n          swal({\n            type: \"success\",\n            icon: \"success\",\n            title: \"Proceso Completado\",\n            text: \"El usuario ha sido creado correctamente\",\n            timer: 3000\n          });\n          this.getList();\n          this.$bvModal.hide('modal-form-users');\n        })\n        .catch(e => {\n          this.loading = false;\n          swal({\n            type: \"error\",\n            icon: \"error\",\n            title: \"Error\",\n            text: \"El usuario no pudo ser creado\",\n            timer: 3000\n          });\n        });\n    },\n    onReset(evt) {\n      evt.preventDefault();\n      // Reset our form values\n      this.form.first_name = \"\";\n      this.form.last_name = \"\";\n      this.form.email = \"\";\n      this.form.password = \"\";\n      this.form.company_id = null;\n      this.form.profile_id = null;\n      // Trick to reset/clear native browser form validation state\n      this.show = false;\n      this.$nextTick(() => {\n        this.show = true;\n      });\n    },\n    getList() {\n      this.columnDefs = [];\n      this.rowData = [];\n      const axiosInstance = axios.create(this.base_instance_axios);\n      axiosInstance({\n        url: \"/users/list/\",\n        method: \"get\",\n        params: {}\n      })\n        .then(res => {\n          let fields_excluded = [\n            \"password\",\n            \"is_superuser\",\n            \"last_login\",\n            \"is_staff\",\n            \"is_active\",\n            \"user_permissions\"\n          ];\n          res.data.forEach(item => {\n            Object.keys(item).forEach(key => {\n              if (!fields_excluded.includes(key)) {\n                this.columnDefs.push({ headerName: key, field: key });\n              }\n            });\n            this.rowData.push({\n              id: item.id,\n              username: item.username,\n              is_superuser: item.is_superuser,\n              first_name: item.first_name,\n              last_name: item.last_name,\n              email: item.email,\n              company: item.company\n            });\n          });\n        })\n        .catch(e => {\n          this.loading = false;\n          swal({\n            type: \"error\",\n            icon: \"error\",\n            title: \"Error\",\n            text: \"El usaurio no puedo ser creado\",\n            timer: 3000\n          });\n        });\n    },\n    getCompanies() {\n      const axiosInstance = axios.create(this.base_instance_axios);\n      axiosInstance({\n        url: \"/companies/\",\n        method: \"get\",\n        params: {}\n      })\n        .then(res => {\n          let fields_excluded = [\n            \"password\",\n            \"is_superuser\",\n            \"last_login\",\n            \"is_staff\",\n            \"is_active\",\n            \"user_permissions\"\n          ];\n          console.log(res);\n          res.data.forEach(item => {\n            this.options_company.push({ value: item.id, text: item.name });\n          });\n        })\n        .catch(e => {\n          this.loading = false;\n          swal({\n            type: \"error\",\n            icon: \"error\",\n            title: \"Error\",\n            text: \"No se pudieron traer las compañías\",\n            timer: 3000\n          });\n        });\n    }\n  }\n};\n</script>"]}]}